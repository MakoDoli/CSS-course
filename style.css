.grid-container {
  display: grid;
  grid-template-columns: 200px 250px;
  grid-auto-rows: minmax(150px, auto);
  grid-row-gap: 20px;
  grid-column-gap: 20px;
  grid-gap: 20px;
  /* grid-template-areas:
    "header header"
    "sidebar content"
    "sidebar content"; */
  /* grid-template-columns: 200px 100px 150px; */
  /* grid-template-columns: 2fr 1fr ; */
  /* grid-template-columns: repeat(4, 100px); */
  /* grid-template-rows: 200px 100px; */
  /* grid-auto-rows: 100px; /*ზომას ეუბნები და თვითონ ალაგებს*/
  /*grid-template-rows: 200px; auto-სთან ერთად მარტო პირველ row-ს ზომა იქნება 200პხ, დანარჩენს თვითონ დაალაგებს */

  justify-content: center;
  /* justify-content: space-around; */
  align-content: center; /* needs height*/
  /* height: 100vh; */
}
/* .grid-item-1 {
  grid-area: header;
}
.grid-item-2 {
  grid-area: sidebar;
} */
.grid-item-1 {
  /* grid-column-start: 1;
  grid-column-end: 5; */
  /* grid-column: 1/5; */
  grid-column: 1/-1; /*ბოლო column-ის ჩათვლით დაიკავებს*/
}

/* თავიდან მარტო ორი column ზომა არის განსაზღვრული grid-container-ში, მაგრამ grid-item-end უფრო მეტი თუ დავუწერეთ, ანუ მეტი column თუ გამოვიდა, თვითონვე დაამატებს შეავსებს ქვედა row-ებში და იმ ორის ზომას გაითვალისწინებს და დანარჩენს თანაბრად გადაანაწილებს*/

.grid-item-2 {
  grid-row: 2/6;
  /* grid-row: span 3; pirdapir ramdeni daikavos */
}
.grid-item-3 {
  align-self: start;
  justify-self: end;
}
.grid-item {
  background-color: antiquewhite;
  border: 4px solid teal;
}
.flexbox-container {
  display: flex;
}

.flexbox-item {
  width: 200px;
  margin: 10px;
  border: 3px solid palegreen;
  background-color: gray;
}
/* flex grow stretches along main axis, 'stretch" stretches opposite to main axis*/
/* align-self overwrites parent's flexbox properties*/
.flexbox-item-1 {
  min-height: 100px;
  align-self: flex-end;
  order: 3; /* changes/overwrites order in flexbox, NOT saccesibility friendly!!! screen-reader will read in original flexbox order, same for using tab to switch to elements*/
}
.flexbox-item-2 {
  min-height: 200px;
  flex-grow: 2;
  /* flex-shrink: 0.5; */
  flex-basis: 0; /* 0 means no initial/additional sizes */
  align-self: center;
}
.flexbox-item-3 {
  min-height: 300px;
  flex-grow: 1;
  flex-basis: 0;
}

/* background styling ofgrid container */

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  background-color: peachpuff;
  height: 100%;
  margin: 0;
}

.grid-container {
  position: relative;
  padding: 20px;
  width: 100%;
}

.grid-item {
  position: relative;
  font-size: 25px;
  padding: 20px;
  padding-top: 50px;
  background-color: #379ad6;
  color: #222;
  border: 1px solid white;
}

.grid-item:nth-child(odd) {
  background-color: #5bbdfa;
}

.grid-item::before {
  content: "Grid Item";
  position: absolute;
  font-size: 25px;
  font-weight: bold;
  top: 10px;
  left: 15px;
}

.grid-item::after {
  position: absolute;
  font-size: 25px;
  top: 10px;
  right: 15px;
  font-weight: bold;
}

.grid-item-1::after {
  content: "1";
}

.grid-item-2::after {
  content: "2";
}

.grid-item-3::after {
  content: "3";
}

.grid-item-4::after {
  content: "4";
}

.grid-item-5::after {
  content: "5";
}

.grid-item-6::after {
  content: "6";
}

.grid-item-7::after {
  content: "7";
}

.grid-item-8::after {
  content: "8";
}

.grid-item-9::after {
  content: "9";
}

.grid-item-10::after {
  content: "10";
}

.grid-item-11::after {
  content: "11";
}

.side-links {
  position: absolute;
  top: 15px;
  right: 15px;
}

.side-link {
  display: flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  margin-bottom: 10px;
  color: white;
  width: 180px;
  padding: 10px 0;
  border-radius: 10px;
}

.side-link-youtube {
  background-color: red;
}

.side-link-twitter {
  background-color: #1da1f2;
}

.side-link-github {
  background-color: #6e5494;
}

.side-link-text {
  margin-left: 10px;
  font-size: 18px;
}

.side-link-icon {
  color: white;
  font-size: 30px;
}
